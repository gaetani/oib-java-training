spring.application.name=OIB Training APP
app.description=OIB Training APP is a Spring Boot application

server.servlet.contextPath=/historga
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
spring.main.allow-bean-definition-overriding=true
spring.mvc.servlet.path=/rest

management.endpoints.web.cors.allow-credentials=true # Whether credentials are supported. When not set, credentials are not supported.
management.endpoints.web.cors.allowed-headers=* # Comma-separated list of headers to allow in a request. '*' allows all headers.
management.endpoints.web.cors.allowed-methods=* # Comma-separated list of methods to allow. '*' allows all methods. When not set, defaults to GET.
management.endpoints.web.cors.allowed-origins=* # Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.
management.endpoints.web.cors.exposed-headers=*
management.endpoints.web.cors.max-age=1800s

# ===============================
# = JPA / HIBERNATE
# ===============================

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.Oracle10gDialect

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show-sql = true
spring.jpa.properties.hibernate.format-sql = true
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=true

# No send data with value null in json response
spring.jackson.serialization.indent-output=true
spring.jackson.default-property-inclusion=ALWAYS
spring.jackson.serialization.fail-on-empty-beans=false
#spring.jackson.mapper.accept_case_insensitive_properties=true

server.port=8080
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
# Username and password
spring.datasource.username=training
spring.datasource.password=training


app.environment=test
ecas.serviceUrl=http://localhost:8080/historga/angular/index.jsp
basePackageToScan=eu.europa.ec.oib
persistenceUnitName=oib-his-back-office-entities

spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT * from dual


# Hibernate ddl auto (create, create-drop, update, none): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create
